{"version":3,"sources":["components/Api.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","components/Load.js","components/InputForm.js","App.js","index.js"],"names":["getDataFromServer","url","fetch","then","response","json","data","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","Promise","all","stop","apply","this","arguments","User","user","react_default","createElement","className","name","concat","email","address","city","street","suite","zipcode","Comment","comment","body","CommentList","commentList","map","components_Comment","key","id","Post","post","title","components_User","components_CommentList","comments","PostList","posts","components_Post","Load","showList","onClick","type","InputForm","filtering","Form","Input","onChange","event","target","value","control","label","placeholder","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_ref2","_ref3","users","postList","setState","loading","sent","slicedToArray","_objectSpread","find","userId","filter","postId","initialTable","currentTable","val","filterTable","state","item","includes","rendering","_this$state","components_Load","Fragment","components_InputForm","components_PostList","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aa533a89.chunk.js","sourcesContent":["const postsUrl = 'https://jsonplaceholder.typicode.com/posts';\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\nconst commentsUrl = 'https://jsonplaceholder.typicode.com/comments';\n\nconst getDataFromServer = url => fetch(url)\n  .then(response => response.json());\n\nconst data = async() => Promise.all([\n  getDataFromServer(postsUrl),\n  getDataFromServer(usersUrl),\n  getDataFromServer(commentsUrl),\n]);\n\nexport default data;\n","import React from 'react';\n\nfunction User({ user }) {\n  return (\n    <div className=\"content\">\n      <div className=\"ui small feed author\">{user.name}</div>\n      <div className=\"ui small feed\">\n        {`\n          ${user.email}, \n          ${user.address.city}, ${user.address.street} \n          ${user.address.suite}, ${user.address.zipcode}\n        `}\n      </div>\n    </div>\n  );\n}\n\nexport default User;\n","import React from 'react';\n\nfunction Comment({ comment }) {\n  return (\n    <div className=\"comments\">\n      <div className=\"content\">\n        <div className=\"ui small feed author\">\n          {`${comment.name}, ${comment.email}`}\n        </div>\n        <div className=\"text\">{comment.body}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","import React from 'react';\nimport Comment from './Comment';\n\nfunction CommentList({ commentList }) {\n  return (\n    <div className=\"extra content\">\n      <div className=\"content\">\n        <div className=\"ui comments\">\n          <h3 className=\"ui dividing header\">Comments</h3>\n        </div>\n      </div>\n      {commentList.map(comment => (\n        <Comment comment={comment} key={comment.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default CommentList;\n","import React from 'react';\nimport User from './User';\nimport CommentList from './CommentList';\n\nfunction Post({ post }) {\n  return (\n    <div className=\"ui card\">\n      <div className=\"content\">\n        <div className=\"header\">{post.title}</div>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"ui small feed\">{post.body}</div>\n      </div>\n\n      <User user={post.user} />\n      <CommentList commentList={post.comments} />\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\n\nfunction PostList({ posts }) {\n  return (\n    <div className=\"wrapper\">\n      {posts.map(post => (\n        <Post post={post} key={post.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default PostList;\n","import React from 'react';\n\nfunction Load({ showList }) {\n  return (\n    <button onClick={showList} type=\"submit\" className=\"ui blue button start\">\n      Load\n    </button>\n  );\n}\n\nexport default Load;\n","import React from 'react';\nimport { Form, Input } from 'semantic-ui-react';\n\nfunction InputForm({ filtering }) {\n  const inputChanged = (event) => {\n    filtering(event.target.value);\n  };\n\n  return (\n    <div className=\"input\">\n      <Form>\n        <Form.Input\n          id=\"form-input-control\"\n          onChange={inputChanged}\n          control={Input}\n          label=\"Find posts\"\n          placeholder=\"Please type what do you want to find\"\n        />\n      </Form>\n    </div>\n  );\n}\n\nexport default InputForm;\n","import React, { Component } from 'react';\nimport './App.css';\nimport data from './components/Api';\nimport PostList from './components/PostList';\nimport Load from './components/Load';\nimport InputForm from './components/InputForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialTable: null,\n      currentTable: null,\n      loading: false,\n      posts: null,\n      users: null,\n      comments: null,\n    };\n  }\n\n  showList = async() => {\n    this.setState({\n      loading: true,\n    });\n\n    const [posts, users, comments] = await data();\n\n    const postList = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      initialTable: postList,\n      currentTable: postList,\n      posts: postList,\n      users: postList.users,\n      comments: postList.comments,\n    });\n  };\n\n  filtering = (val) => {\n    if (val) {\n      const table = this.state.currentTable;\n      const filterTable = table\n        .filter(\n          item => item.body.includes(val)\n            || item.title.includes(val)\n        );\n\n      this.setState({\n        currentTable: filterTable,\n      });\n    } else {\n      this.setState(prev => ({\n        currentTable: prev.initialTable,\n      }));\n    }\n  }\n\n  rendering = () => {\n    const {\n      posts, users, comments, loading,\n    } = this.state;\n\n    if (users === null && posts === null && comments === null) {\n      if (loading) {\n        return <button className=\"ui loading primary button\">Loading</button>;\n      }\n\n      return <Load showList={this.showList} />;\n    }\n\n    return (\n      <>\n        <InputForm\n          filtering={this.filtering}\n        />\n        <PostList\n          posts={this.state.currentTable}\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"wrap\">{this.rendering()}</div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}